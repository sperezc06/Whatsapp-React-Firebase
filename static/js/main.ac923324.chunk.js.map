{"version":3,"sources":["firebase.js","SidebarChat.js","StateProvider.js","Sidebar.js","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","name","addNewChat","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","rooms","setRooms","user","unsubscribe","photoURl","IconButton","placeholder","type","room","Chat","input","setInput","roomId","useParams","setRoomName","Date","length","timestamp","toDate","toUTCString","displayName","onChange","e","target","preventDefault","console","log","FieldValue","serverTimestamp","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac923324.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB088aW1UTluW97wrUBluJyyNpoAh26Sj0\",\r\n  authDomain: \"whatsapp-clone-e2938.firebaseapp.com\",\r\n  databaseURL: \"https://whatsapp-clone-e2938-default-rtdb.firebaseio.com\",\r\n  projectId: \"whatsapp-clone-e2938\",\r\n  storageBucket: \"whatsapp-clone-e2938.appspot.com\",\r\n  messagingSenderId: \"317514429795\",\r\n  appId: \"1:317514429795:web:5afc70777975826b950f56\",\r\n  measurementId: \"G-80ZJVH6D53\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { auth, provider };\r\nexport default db;\r\n","import { Avatar } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./SidebarChat.css\";\r\nimport db from \"./firebase\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SidebarChat({ id, name, addNewChat }) {\r\n  const [seed, setSeed] = useState(\"\");\r\n  const [messages, setMessages] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      db.collection(\"rooms\")\r\n        .doc(id)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot((snapshot) =>\r\n          setMessages(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n  }, []);\r\n\r\n  const createChat = () => {\r\n    const roomName = prompt(\"Please enter name for chat\");\r\n\r\n    if (roomName) {\r\n      db.collection(\"rooms\").add({\r\n        name: roomName,\r\n      });\r\n    }\r\n  };\r\n\r\n  return !addNewChat ? (\r\n    <Link to={`/rooms/${id}`}>\r\n      <div className=\"sidebarChat\">\r\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n        <div className=\"sidebarChat__info\">\r\n          <h2>{name}</h2>\r\n          <p>{messages[0]?.message}</p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  ) : (\r\n    <div onClick={createChat} className=\"sidebarChat\">\r\n      <h2>Add new chat</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarChat;\r\n","import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport DonutlargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport MorevertIcon from \"@material-ui/icons/MoreVert\";\r\nimport SearchOutlined from \"@material-ui/icons/SearchOutlined\";\r\nimport SidebarChat from \"./SidebarChat\";\r\nimport db from \"./firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Sidebar() {\r\n  const [rooms, setRooms] = useState([]);\r\n  const [{ user }, dispatch] = useStateValue();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = db.collection(\"rooms\").onSnapshot((snapshot) =>\r\n      setRooms(\r\n        snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          data: doc.data(),\r\n        }))\r\n      )\r\n    );\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  // run this once the sidebar component load and once only the empty brackets[]\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar__header\">\r\n        <Avatar src={user?.photoURl} />\r\n        <div className=\"sidebar__headerRight\">\r\n          <IconButton>\r\n            <DonutlargeIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <ChatIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MorevertIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar__search\">\r\n        <div className=\"sidebar__searchContainer\">\r\n          <SearchOutlined />\r\n          <input placeholder=\"Search or start new chat\" type=\"text\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar__chats\">\r\n        <SidebarChat addNewChat />\r\n        {rooms.map((room) => (\r\n          <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Chat.css\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport SearchOutlined from \"@material-ui/icons/SearchOutlined\";\r\nimport AttachFile from \"@material-ui/icons/AttachFile\";\r\nimport MoreVert from \"@material-ui/icons/MoreVert\";\r\nimport InsertEmotionIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport MicIcon from \"@material-ui/icons/MicNone\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport db from \"./firebase\";\r\nimport firebase from \"firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Chat() {\r\n  const [seed, setSeed] = useState(\"\");\r\n  const [input, setInput] = useState(\"\");\r\n  const { roomId } = useParams();\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [{ user }, dispatch] = useStateValue();\r\n\r\n  useEffect(() => {\r\n    if (roomId) {\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .onSnapshot((snapshot) => setRoomName(snapshot.data().name));\r\n\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot((snapshot) =>\r\n          setMessages(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n    }\r\n  }, [roomId]);\r\n\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n  }, [roomId]);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"You typed >>> \", input);\r\n\r\n    db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\r\n      message: input,\r\n      name: user.displayName,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chat__header\">\r\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n        <div className=\"chat__headerInfo\">\r\n          <h3>{roomName}</h3>\r\n          <p>Last senn {\"\"}{new Date(\r\n            messages[messages.length - 1]?.timestamp?.toDate()\r\n          ).toUTCString()}\r\n          )</p>\r\n        </div>\r\n        <div className=\"chat__headerRight\">\r\n          <IconButton>\r\n            <SearchOutlined />\r\n          </IconButton>\r\n          <IconButton>\r\n            <AttachFile />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVert />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className=\"chat__body\">\r\n        {messages.map((message) => (\r\n          <p\r\n            className={`chat__message ${\r\n              message.name === user.displayName && \"chat__reciever\"\r\n            }`}\r\n          >\r\n            <span className=\"chat__name\">{message.name}</span>\r\n            {message.message}\r\n            <span className=\"chat__timestamp\">\r\n              {\" \"}\r\n              {new Date(message.timestamp?.toDate()).toUTCString()}\r\n            </span>\r\n          </p>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"chat__footer\">\r\n        <InsertEmotionIcon />\r\n        <form>\r\n          <input\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"Type a message\"\r\n            type=\"text\"\r\n          />\r\n          <button onClick={sendMessage} type=\"submit\">\r\n            Send a message\r\n          </button>\r\n        </form>\r\n        <MicIcon />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","export const initialState = {\r\n  user: null,\r\n};\r\n\r\nexport const actionTypes = {\r\n  SET_USER: \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./Login.css\";\r\nimport { auth, provider } from \"./firebase\";\r\nimport { actionTypes } from \"./reducer\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Login() {\r\n  const [{}, dispatch] = useStateValue();\r\n  const signIn = () => {\r\n    auth\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        dispatch({\r\n          type: actionTypes.SET_USER,\r\n          user: result.user,\r\n        });\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  };\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login__container\">\r\n        <img\r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\"\r\n          alt=\"\"\r\n        />\r\n        <div className=\"login__text\">\r\n          <h1>Sign in to Whatsapp</h1>\r\n        </div>\r\n        <Button type=\"submit\" onClick={signIn}>\r\n          Sign in With Google\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import \"./App.css\";\r\nimport React, { useState } from \"react\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Chat from \"./Chat\";\r\nimport Login from \"./Login\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction App() {\r\n  const [{ user }, dispatch] = useStateValue();\r\n  return (\r\n    <div className=\"app\">\r\n      {!user ? (\r\n        <Login />\r\n      ) : (\r\n        <div className=\"app__body\">\r\n          <Router>\r\n            <Sidebar />\r\n            <Switch>\r\n              <Route path=\"/rooms/:roomId\">\r\n                <Chat />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <Chat />\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport reducer, { initialState } from \"./reducer\";\r\nimport { StateProvider } from \"./StateProvider\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StateProvider initialState={initialState} reducer={reducer}>\r\n      <App />\r\n    </StateProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}